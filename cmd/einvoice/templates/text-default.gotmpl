{{- /*
  Responsive invoice template (narrow / wide)
  Requirements:
    - Go code sets `.TermWidth`
    - FuncMap provides: hr(int)->string, padright(string,int)->string, wrap(string,int)->string,
                        min(int,int)->int, max(int,int)->int, sub1(int)->int
*/ -}}

{{- $w := .TermWidth -}}

{{ underline "Invoice Information" }}
Invoice Number:  {{.Number}}
Date:            {{.Date}}
Type:            {{.Type}}
Profile:         {{.Profile}}
{{- with .BusinessProcess }}
Business Process: {{.}}
{{- end }}
{{- with .BuyerOrderReferencedDocument }}
Buyer Order Ref: {{.}}
{{- end }}
Currency:        {{.Currency}}

{{if ge $w 60 -}}
{{ padright "Seller" 40 -}}              {{ "Buyer"}}
{{ padright "------" 40 -}}              {{ "-----"}}
{{ padright .Seller.Name 40 -}}          {{ .Buyer.Name }}

{{- if or .Seller.Address .Buyer.Address }}
{{- if or .Seller.Address.Line1 .Buyer.Address.Line1 }}
{{ padright .Seller.Address.Line1 40 -}} {{ .Buyer.Address.Line1 }}
{{- end }}
{{- if or .Seller.Address.Line2 .Buyer.Address.Line2 }}
{{ padright .Seller.Address.Line2 40 -}} {{ .Buyer.Address.Line2 }}
{{- end }}
{{- if or .Seller.Address.Line3 .Buyer.Address.Line3 }}
{{ padright .Seller.Address.Line3 40 -}} {{ .Buyer.Address.Line3 }}
{{- end }}
{{ padright (printf "%s %s" .Seller.Address.PostalCode .Seller.Address.City) 40 -}}
{{ (printf "%s %s" .Buyer.Address.PostalCode .Buyer.Address.City)}}
{{ padright .Seller.Address.Country 40 -}} {{ .Buyer.Address.Country }}
{{- end -}}
{{- if or .Seller.VATNumber .Buyer.VATNumber }}
VAT: {{ padright .Seller.VATNumber 35 -}}{{ .Buyer.VATNumber }}
{{- end -}}

{{- /* id */ -}}
{{- if or .Seller.ID .Buyer.ID }}
{{ with .Seller.ID }}ID: {{ padright . 36 -}}{{else}}{{ padright "" 40}}{{end}}{{ with .Buyer.ID }}ID: {{.}}{{end}}
{{- end -}}

{{- /* global id */ -}}
{{- if or .Seller.GlobalID .Buyer.GlobalID }}
Global ID: {{ padright .Seller.GlobalID 29 -}}{{ .Buyer.GlobalID }}
{{ end -}}
{{- else -}}

{{- /* narrow layout */ -}}
Seller:
  {{.Seller.Name}}
  {{- if .Seller.Address }}
  {{.Seller.Address.PostalCode}} {{.Seller.Address.City}}
  {{.Seller.Address.Country}}
  {{- end }}
  {{- if .Seller.VATNumber }}
  VAT: {{.Seller.VATNumber}}
  {{- end }}
Buyer:
  {{.Buyer.Name}}
  {{- if .Buyer.Address }}
  {{.Buyer.Address.PostalCode}} {{.Buyer.Address.City}}
  {{.Buyer.Address.Country}}
  {{- end }}
  {{- if .Buyer.VATNumber }}
  VAT: {{.Buyer.VATNumber}}
  {{- end }}
{{- end }}

{{ underline (printf "%s (%d items)" "Invoice Lines" .LineCount) }}
{{- range .Lines }}

{{- /* wide layout */ -}}
{{- if ge $w 80 }}
{{ padright (printf "Line %s" .ID) 10 }}{{ if .Description }}{{ wrap .Description (max (min $w 60) 30) 10 }}
{{- end -}}
{{- with .Note }}
          {{ wrap . (max (min $w 60) 30) 10}}{{ end }}
{{ padright "" 10 }}Qty: {{ .Quantity }}  Unit: {{ .NetPrice }} {{ $.Currency }}  Total: {{ .NetAmount }} {{ $.Currency }}


{{- /* narrow layout */ -}}
{{- else -}}
Line {{ .ID }}:
{{ if .Description }} Description: {{ wrap .Description (max (min $w 60) 30 10) }}{{ end }}
{{ if .Quantity }} Quantity: {{ .Quantity }}{{ end }}
{{ if .NetPrice }} Unit Price: {{ .NetPrice }} {{ $.Currency }}{{ end }}
 Net Amount: {{ .NetAmount }} {{ $.Currency }}
{{- end }}
{{- end }}

{{/* Tax breakdown */}}
{{ underline "Tax Breakdown" }}
{{- if .TradeTax }}
{{ padright "Type" 10 }}{{ padright "Category" 10 }}{{ padright "Rate" 8 }}{{ padright "Basis" 15 }}{{ padright "Amount" 15 }}
{{- range .TradeTax }}
{{ padright .Type 10 }}{{ padright .Category 10 }}{{ padright (printf "%s%%" .Percent) 8 }}{{ padright (printf "%s %s" .BasisAmount $.Currency) 15 }}{{ padright (printf "%s %s" .CalculatedAmount $.Currency) 15 }}{{ if .ExemptionReason }}{{ .ExemptionReason }}{{ end }}
{{- end }}
{{- else }}
No tax information available.
{{- end }}



{{ underline "Totals" }}
{{ $wd := 30 -}}
{{ padmiddle "Line Total:" (printf "%s %s" .Totals.LineTotal .Currency) $wd }}
{{ if .Totals.AllowanceTotal }}{{padmiddle "Allowances:" (printf "-%s %s" .Totals.AllowanceTotal .Currency) $wd }}{{ end }}
{{ if .Totals.ChargeTotal }}{{ padmiddle "Charges:"  (printf "+%s %s" .Totals.ChargeTotal  .Currency ) $wd }}{{- end }}
{{ padmiddle "Tax Basis:"   (printf "%s %s" .Totals.TaxBasisTotal .Currency) $wd }}
{{ padmiddle "Tax Total:"   (printf "%s %s" .Totals.TaxTotal      .Currency) $wd }}
{{ padmiddle "Grand Total:" (printf "%s %s" .Totals.GrandTotal    .Currency) $wd  }}
{{ if .Totals.TotalPrepaid }}{{ padmiddle "Prepaid:" (printf "-%s %s" .Totals.TotalPrepaid .Currency ) $wd }}{{ end }}
{{ if .Totals.RoundingAmount }}{{ padmiddle "Rounding:"  (printf "%s %s" .Totals.RoundingAmount ) $wd }}{{ end }}
{{ padmiddle "Due Amount:"  (printf "%s %s" .Totals.DuePayableAmount .Currency) $wd }}

{{- /* ChargeAllowance */ -}}
{{/*
	ChargeIndicator bool   `json:"charge_indicator"`
	Amount          string `json:"amount"`
	Reason          string `json:"reason,omitempty"`
	Type            string `json:"type,omitempty"`
	Category        string `json:"category,omitempty"`
	Percent         string `json:"percent,omitempty"`
	BasisAmount     string `json:"basis_amount,omitempty"`
}
*/ -}}
{{ if .ChargeAllowances }}

{{ underline "Charge / Allowance Details" }}
  {{ padright "Type" 10 }}{{ padright "Category" 10 }}{{ padright "Percent" 8 }}{{ padright "Basis" 15 }}{{ padright "Amount" 15 }}Reason
{{- range .ChargeAllowances }}
{{if .ChargeIndicator }}C{{ else }}A{{ end }} {{ padright .Type 9 }} {{ padright .Category 10 }}{{ padright (printf "%s%%" .Percent) 8 }}{{ padright (printf "%s %s" .BasisAmount $.Currency) 15 }}{{ padright (printf "%s %s" .Amount $.Currency) 15 }}{{ if .Reason }}{{ .Reason }}{{ end }}
{{- end }}
{{- end }}

{{- if .PaymentTerms }}

{{ underline "Payment Terms" }}
{{- range .PaymentTerms }}
{{ wrap . $w 0}}
{{- end }}
{{- end }}

{{- if .Notes }}

{{ underline "Notes" }}
{{- range $i, $n := .Notes }}
Note {{ add $i 1 }}: {{if $n.SubjectQualifier }}{{ $n.SubjectQualifier }}{{ else }}General{{ end }}
{{ $n.Text }}
{{- if lt $i (sub1 (len $.Notes)) }}
{{ hr 10 }}
{{- end }}
{{- end }}
{{- end }}

